{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AsignMedicalStaffComponent {\n  constructor(http) {\n    this.http = http;\n    this.medicoId = 0;\n    this.pacienteId = 0;\n  }\n  asignarMedico(event) {\n    event.preventDefault();\n    if (!this.medicoId || !this.pacienteId) {\n      console.log('Debe completar ambos campos');\n      return;\n    }\n    const url = '/api/assign-medical-staff';\n    const data = {\n      medical_staff_id: this.medicoId,\n      patient_id: this.pacienteId\n    };\n    this.http.post(url, data).subscribe(response => {\n      console.log('Asignación exitosa:', response);\n      // Realizar acciones adicionales si es necesario\n    }, error => {\n      console.log('Error en la asignación:', error);\n      // Manejar errores si es necesario\n    });\n  }\n}\n\nAsignMedicalStaffComponent.ɵfac = function AsignMedicalStaffComponent_Factory(t) {\n  return new (t || AsignMedicalStaffComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAsignMedicalStaffComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AsignMedicalStaffComponent,\n  selectors: [[\"app-asign-medical-staff\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"formulario-registro\", 3, \"submit\"], [\"for\", \"medicoId\"], [\"type\", \"number\", \"id\", \"medicoId\", \"name\", \"medicoId\", \"required\", \"\"], [\"for\", \"pacienteId\"], [\"type\", \"number\", \"id\", \"pacienteId\", \"name\", \"pacienteId\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function AsignMedicalStaffComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function AsignMedicalStaffComponent_Template_form_submit_0_listener($event) {\n        return ctx.asignarMedico($event);\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"ID del M\\u00E9dico:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"ID del Paciente:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Asignar M\\u00E9dico\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"(()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\t\\\"use strict\\\";\\n \\t\\n \\t\\n })()[_ngcontent-%COMP%]\\n;\"]\n});\nexport { AsignMedicalStaffComponent };","map":{"version":3,"names":["AsignMedicalStaffComponent","constructor","http","medicoId","pacienteId","asignarMedico","event","preventDefault","console","log","url","data","medical_staff_id","patient_id","post","subscribe","response","error","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AsignMedicalStaffComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AsignMedicalStaffComponent_Template_form_submit_0_listener","$event","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\David\\Desktop\\proyectosoftware2205\\ProyectoSoftwareII\\Frontend\\src\\app\\medical-staff\\asign-medical-staff\\asign-medical-staff.component.ts","C:\\Users\\David\\Desktop\\proyectosoftware2205\\ProyectoSoftwareII\\Frontend\\src\\app\\medical-staff\\asign-medical-staff\\asign-medical-staff.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-asign-medical-staff',\n  templateUrl: './asign-medical-staff.component.html',\n  styleUrls: ['./asign-medical-staff.component.css']\n})\nexport class AsignMedicalStaffComponent {\n  medicoId: number = 0;\n  pacienteId: number = 0;\n\n  constructor(private http: HttpClient) {}\n\n  asignarMedico(event: Event) {\n    event.preventDefault();\n\n    if (!this.medicoId || !this.pacienteId) {\n      console.log('Debe completar ambos campos');\n      return;\n    }\n\n    const url = '/api/assign-medical-staff';\n    const data = {\n      medical_staff_id: this.medicoId,\n      patient_id: this.pacienteId\n    };\n\n    this.http.post(url, data).subscribe(\n      response => {\n        console.log('Asignación exitosa:', response);\n        // Realizar acciones adicionales si es necesario\n      },\n      error => {\n        console.log('Error en la asignación:', error);\n        // Manejar errores si es necesario\n      }\n    );\n  }\n}","<form (submit)=\"asignarMedico($event)\" class=\"formulario-registro\">\n    <div>\n      <label for=\"medicoId\">ID del Médico:</label>\n      <input type=\"number\" id=\"medicoId\" name=\"medicoId\" required>\n    </div>\n    <div>\n      <label for=\"pacienteId\">ID del Paciente:</label>\n      <input type=\"number\" id=\"pacienteId\" name=\"pacienteId\" required>\n    </div>\n    <button type=\"submit\">Asignar Médico</button>\n  </form>\n  "],"mappings":";;AAGA,MAKaA,0BAA0B;EAIrCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHxB,KAAAC,QAAQ,GAAW,CAAC;IACpB,KAAAC,UAAU,GAAW,CAAC;EAEiB;EAEvCC,aAAaA,CAACC,KAAY;IACxBA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAI,CAAC,IAAI,CAACJ,QAAQ,IAAI,CAAC,IAAI,CAACC,UAAU,EAAE;MACtCI,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;MAC1C;;IAGF,MAAMC,GAAG,GAAG,2BAA2B;IACvC,MAAMC,IAAI,GAAG;MACXC,gBAAgB,EAAE,IAAI,CAACT,QAAQ;MAC/BU,UAAU,EAAE,IAAI,CAACT;KAClB;IAED,IAAI,CAACF,IAAI,CAACY,IAAI,CAACJ,GAAG,EAAEC,IAAI,CAAC,CAACI,SAAS,CACjCC,QAAQ,IAAG;MACTR,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEO,QAAQ,CAAC;MAC5C;IACF,CAAC,EACDC,KAAK,IAAG;MACNT,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEQ,KAAK,CAAC;MAC7C;IACF,CAAC,CACF;EACH;;;AA9BWjB,0BAA0B,C;mBAA1BA,0BAA0B,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAA1BrB,0BAA0B,C;QAA1BA,0BAA0B;EAAAsB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,oCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRvCV,EAAA,CAAAY,cAAA,cAAmE;MAA7DZ,EAAA,CAAAa,UAAA,oBAAAC,2DAAAC,MAAA;QAAA,OAAUJ,GAAA,CAAAxB,aAAA,CAAA4B,MAAA,CAAqB;MAAA,EAAC;MAClCf,EAAA,CAAAY,cAAA,UAAK;MACmBZ,EAAA,CAAAgB,MAAA,0BAAc;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC5CjB,EAAA,CAAAkB,SAAA,eAA4D;MAC9DlB,EAAA,CAAAiB,YAAA,EAAM;MACNjB,EAAA,CAAAY,cAAA,UAAK;MACqBZ,EAAA,CAAAgB,MAAA,uBAAgB;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAChDjB,EAAA,CAAAkB,SAAA,eAAgE;MAClElB,EAAA,CAAAiB,YAAA,EAAM;MACNjB,EAAA,CAAAY,cAAA,gBAAsB;MAAAZ,EAAA,CAAAgB,MAAA,2BAAc;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;;;SDDpCnC,0BAA0B"},"metadata":{},"sourceType":"module","externalDependencies":[]}