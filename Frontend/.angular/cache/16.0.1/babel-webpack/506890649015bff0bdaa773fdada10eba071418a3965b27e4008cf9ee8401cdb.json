{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass AssignMedicalStaffComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  asignarMedico(event) {\n    event.preventDefault();\n    const form = event.target;\n    const medicoId = form['medicoId'].value;\n    const pacienteId = form['pacienteId'].value;\n    const body = {\n      medical_staff_id: parseInt(medicoId),\n      patient_id: parseInt(pacienteId)\n    };\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.http.post('http://localhost:8000/personal_in_charge/api/assign-medical-staff', body, httpOptions).subscribe(response => {\n      console.log('Asignación de médico exitosa', response);\n      form.reset();\n    }, error => {\n      console.error('Error al asignar médico', error);\n    });\n  }\n}\nAssignMedicalStaffComponent.ɵfac = function AssignMedicalStaffComponent_Factory(t) {\n  return new (t || AssignMedicalStaffComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nAssignMedicalStaffComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AssignMedicalStaffComponent,\n  selectors: [[\"app-assign-medical-staff\"]],\n  decls: 11,\n  vars: 0,\n  consts: [[1, \"formulario-registro\", 3, \"submit\"], [\"for\", \"medicoId\"], [\"type\", \"number\", \"id\", \"medicoId\", \"name\", \"medicoId\", \"required\", \"\"], [\"for\", \"pacienteId\"], [\"type\", \"number\", \"id\", \"pacienteId\", \"name\", \"pacienteId\", \"required\", \"\"], [\"type\", \"submit\"]],\n  template: function AssignMedicalStaffComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"submit\", function AssignMedicalStaffComponent_Template_form_submit_0_listener($event) {\n        return ctx.asignarMedico($event);\n      });\n      i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n      i0.ɵɵtext(3, \"ID del M\\u00E9dico:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\")(6, \"label\", 3);\n      i0.ɵɵtext(7, \"ID del Paciente:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"button\", 5);\n      i0.ɵɵtext(10, \"Asignar M\\u00E9dico\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  encapsulation: 2\n});\nexport { AssignMedicalStaffComponent };","map":{"version":3,"names":["HttpHeaders","AssignMedicalStaffComponent","constructor","http","asignarMedico","event","preventDefault","form","target","medicoId","value","pacienteId","body","medical_staff_id","parseInt","patient_id","httpOptions","headers","post","subscribe","response","console","log","reset","error","i0","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AssignMedicalStaffComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AssignMedicalStaffComponent_Template_form_submit_0_listener","$event","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\David\\Desktop\\proyectosoftware2205\\ProyectoSoftwareII\\Frontend\\src\\app\\medical-staff\\asign-medical-staff\\asign-medical-staff.component.ts","C:\\Users\\David\\Desktop\\proyectosoftware2205\\ProyectoSoftwareII\\Frontend\\src\\app\\medical-staff\\asign-medical-staff\\asign-medical-staff.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Component({\n  selector: 'app-assign-medical-staff',\n  templateUrl: './asign-medical-staff.component.html',\n  //styleUrls: ['./assign-medical-staff.component.css']\n})\nexport class AssignMedicalStaffComponent {\n  constructor(private http: HttpClient) { }\n\n  asignarMedico(event: Event) {\n    event.preventDefault();\n\n    const form = event.target as HTMLFormElement;\n\n    const medicoId = form['medicoId'].value;\n    const pacienteId = form['pacienteId'].value;\n\n    const body = {\n      medical_staff_id: parseInt(medicoId),\n      patient_id: parseInt(pacienteId)\n    };\n\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n\n    this.http.post('http://localhost:8000/personal_in_charge/api/assign-medical-staff', body, httpOptions)\n      .subscribe(\n        (response) => {\n          console.log('Asignación de médico exitosa', response);\n          form.reset();\n        },\n        (error) => {\n          console.error('Error al asignar médico', error);\n        }\n      );\n  }\n}\n","<form (submit)=\"asignarMedico($event)\" class=\"formulario-registro\">\n    <div>\n      <label for=\"medicoId\">ID del Médico:</label>\n      <input type=\"number\" id=\"medicoId\" name=\"medicoId\" required>\n    </div>\n    <div>\n      <label for=\"pacienteId\">ID del Paciente:</label>\n      <input type=\"number\" id=\"pacienteId\" name=\"pacienteId\" required>\n    </div>\n    <button type=\"submit\">Asignar Médico</button>\n  </form>\n  "],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAE9D,MAKaC,2BAA2B;EACtCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,aAAaA,CAACC,KAAY;IACxBA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,IAAI,GAAGF,KAAK,CAACG,MAAyB;IAE5C,MAAMC,QAAQ,GAAGF,IAAI,CAAC,UAAU,CAAC,CAACG,KAAK;IACvC,MAAMC,UAAU,GAAGJ,IAAI,CAAC,YAAY,CAAC,CAACG,KAAK;IAE3C,MAAME,IAAI,GAAG;MACXC,gBAAgB,EAAEC,QAAQ,CAACL,QAAQ,CAAC;MACpCM,UAAU,EAAED,QAAQ,CAACH,UAAU;KAChC;IAED,MAAMK,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIjB,WAAW,CAAC;QACvB,cAAc,EAAE;OACjB;KACF;IAED,IAAI,CAACG,IAAI,CAACe,IAAI,CAAC,mEAAmE,EAAEN,IAAI,EAAEI,WAAW,CAAC,CACnGG,SAAS,CACPC,QAAQ,IAAI;MACXC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEF,QAAQ,CAAC;MACrDb,IAAI,CAACgB,KAAK,EAAE;IACd,CAAC,EACAC,KAAK,IAAI;MACRH,OAAO,CAACG,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACL;;AAhCWvB,2BAA2B,C;mBAA3BA,2BAA2B,EAAAwB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAA3B3B,2BAA2B,C;QAA3BA,2BAA2B;EAAA4B,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,qCAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRxCV,EAAA,CAAAY,cAAA,cAAmE;MAA7DZ,EAAA,CAAAa,UAAA,oBAAAC,4DAAAC,MAAA;QAAA,OAAUJ,GAAA,CAAAhC,aAAA,CAAAoC,MAAA,CAAqB;MAAA,EAAC;MAClCf,EAAA,CAAAY,cAAA,UAAK;MACmBZ,EAAA,CAAAgB,MAAA,0BAAc;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAC5CjB,EAAA,CAAAkB,SAAA,eAA4D;MAC9DlB,EAAA,CAAAiB,YAAA,EAAM;MACNjB,EAAA,CAAAY,cAAA,UAAK;MACqBZ,EAAA,CAAAgB,MAAA,uBAAgB;MAAAhB,EAAA,CAAAiB,YAAA,EAAQ;MAChDjB,EAAA,CAAAkB,SAAA,eAAgE;MAClElB,EAAA,CAAAiB,YAAA,EAAM;MACNjB,EAAA,CAAAY,cAAA,gBAAsB;MAAAZ,EAAA,CAAAgB,MAAA,2BAAc;MAAAhB,EAAA,CAAAiB,YAAA,EAAS;;;;;SDDpCzC,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}